@model BetBet.ViewModels.RankingViewModel

@{
    ViewBag.Title = "Ranking";
}

<h2>Ranking</h2>

<table class="table">
    <tr>
        <th>
            Pos
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TeamName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GamesPlayed)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GamesWon)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Draws)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GamesLost)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GoalsFor)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GoalsAgainst)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GoalDifferential)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Points)
        </th>        
    </tr>
    @{int count = 0;}

    @foreach (var item in Model.TeamList)
    {
        count++;
        <tr>
            <td>
                @count
            </td>
            <td>
                @Html.ActionLink(item.TeamName, "Details", new { id = item.TeamID })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GamesPlayed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GamesWon)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Draws)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GamesLost)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GoalsFor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GoalsAgainst)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GoalDifferential)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Points)
            </td>
        </tr>
    }

</table>
