@model BetBet.ViewModels.SettingsViewModel
@using BetBet.Model

@{
    ViewBag.Title = "AccountSettings";
    User loggedInUser = (User)Session["LoggedInUser"];
}

<h1>AccountSettings</h1>
<br />

@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Status == true)
    {
        <div class="alert alert-success">
            <strong>Success!</strong>@ViewBag.Message
        </div>
    }
    if (ViewBag.Status == false)
    {
        <div class="alert alert-danger">
            <strong>Error!</strong>@ViewBag.Message
        </div>
    }
}

@using (Html.BeginForm("UpdateBalance", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Balance</h2>
        <hr />
        <div width="24%"><h3>€ @loggedInUser.Balance</h3></div><br />

        <div class="form-group">
            @Html.LabelFor(model => model.Funds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Funds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Funds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="DepositButton" value="Deposit" class="btn btn-default" /> <input type="submit" name="WithdrawButton" value="Withdraw" class="btn btn-default" />
            </div>
        </div>
        <hr />
    </div>
}

@using (Html.BeginForm("ChangePassword", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <br />
    <div class="form-horizontal">
        <h2>Change Password</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
