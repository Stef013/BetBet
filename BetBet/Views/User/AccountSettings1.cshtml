@model BetBet.ViewModels.SettingsViewModel
@using BetBet.Model

@{
    ViewBag.Title = "AccountSettings";
    User loggedinUser = (User)Session["LoggedInUser"];
}

<h2>AccountSettings</h2>

@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Success!</strong>@ViewBag.Message
        </div>
    }
}



else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <div style="float: right">

                <h3>ChangePassword</h3>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <a href="@Url.Action("ChangePassword", "User", new RouteValueDictionary { { "model", Model} })" class="btn btn-default">Change</a>
                    </div>
                </div>
            </div>
            @*
            <div style="float: left">
                <h3>Balance</h3>
                <h4>€ @loggedinUser.Balance</h4>
                <hr />

                <div class="form-group">
                    @Html.LabelFor(model => model.Funds, htmlAttributes: new { @class = "control-label col-xs-1" })
                    <div class="col-xs-2">
                        @Html.EditorFor(model => model.Funds, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Funds, "", new { @class = "text-danger" })
                        <br />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <a href="@Url.Action("Deposit", "User", new RouteValueDictionary { { "amount", Model.Funds} })" class="btn btn-default">Deposit</a>
                    </div>
                </div>

            </div>*@
        </div>


        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Error!</strong>@ViewBag.Message
            </div>
        }
    }
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
